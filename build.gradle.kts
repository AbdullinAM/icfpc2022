/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5.1/samples
 */
plugins {
    java
    kotlin("jvm") version "1.7.10"
    id("org.openjfx.javafxplugin") version "0.0.13"
    application
}

group = "ru.spbstu"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vorpal-research.science") }
    maven { setUrl("https://jitpack.io") }
}

dependencies {
    implementation(kotlin("stdlib"))
    implementation("ru.spbstu:jackson-module-ktuples:0.0.0.6")
    implementation("ru.spbstu:kotlin-wheels-jvm:0.0.1.5")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3")
    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")
    implementation("com.squareup.okhttp3:okhttp:4.2.0")

    implementation("com.sksamuel.scrimage:scrimage-core:4.0.32")
    implementation("no.tornado:tornadofx:1.7.20")

    testImplementation(kotlin("test"))
}

javafx {
    version = "11.0.2"
    modules = listOf("javafx.controls", "javafx.graphics")
}


tasks.getByName<Test>("test") {
    useJUnitPlatform()
}

val icfpcMainClassName = project.findProperty("mainClass") as? String ?: "ru.spbstu.icfpc2022.BruteforceKt"
application {
    mainClass.set(icfpcMainClassName)
}

fun buildFatJar(name: String, mainClass: String) = task("fatJar$name", type = Jar::class) {
    manifest {
        attributes(mapOf("Main-Class" to mainClass))
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveBaseName.set("${archiveBaseName.get()}-$name")
    from(configurations.runtimeClasspath.get().map { if (it.isDirectory) it else zipTree(it) })
    with(tasks.jar.get() as CopySpec)
}

val bruteforceJar = buildFatJar("bruteforce", icfpcMainClassName)
val fuzzerJar = buildFatJar("fuzzer", "ru.spbstu.icfpc2022.FuzzerKt")
